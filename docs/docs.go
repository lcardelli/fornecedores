// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/suppliers": {
            "delete": {
                "description": "Delete a new supplier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Suppliers"
                ],
                "summary": "Delete Supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Supplier identification",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteSupplierResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "handler.DeleteSupplierResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schemas.SupplierLinkResponse"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.ExternalSupplier": {
            "type": "object",
            "properties": {
                "ativo": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "cgccfo": {
                    "type": "string"
                },
                "cidade": {
                    "type": "string"
                },
                "codcfo": {
                    "type": "string"
                },
                "codcoligada": {
                    "type": "integer"
                },
                "complemento": {
                    "type": "string"
                },
                "contato": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "nomefantasia": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "rua": {
                    "type": "string"
                },
                "telefone": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                }
            }
        },
        "schemas.ProductResponse": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "Service": {
                    "$ref": "#/definitions/schemas.ServiceResponse"
                },
                "ServiceID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.ServiceResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/schemas.SupplierCategoryResponse"
                },
                "category_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "schemas.SupplierCategory": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.SupplierCategoryResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "schemas.SupplierLinkResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/schemas.SupplierCategory"
                },
                "category_id": {
                    "type": "integer"
                },
                "cnpj": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "external_supplier": {
                    "$ref": "#/definitions/schemas.ExternalSupplier"
                },
                "id": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.ProductResponse"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.ServiceResponse"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
